version: '3.8'
services:
  app:
    image: 2023ac05619/mlops-iris:${IMAGE_TAG:-latest}
    container_name: app
    restart: always
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://user:password@db/iris_db
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    ports:
      - "5001:5001"
    volumes:
      - ./mlruns:/app/mlruns
    depends_on:
      - db
      - mlflow
    networks:
      - mlops-net

  db:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=iris_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - mlops-net

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    restart: always
    command: >
      mlflow server
      --backend-store-uri postgresql://user:password@db/iris_db
      --default-artifact-root /mlruns
      --host 0.0.0.0
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    depends_on:
      - db
    networks:
      - mlops-net

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mlops-net

  grafana:
    image: grafana/grafana:10.1.2
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    networks:
      - mlops-net

volumes:
  postgres_data:

networks:
  mlops-net:
    driver: bridge
